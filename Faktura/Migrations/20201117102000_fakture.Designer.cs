// <auto-generated />
using System;
using Fakture.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Fakture.Migrations
{
    [DbContext(typeof(MojDbContext))]
    [Migration("20201117102000_fakture")]
    partial class fakture
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Fakture.Models.Faktura", b =>
                {
                    b.Property<int>("FakturaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BrojFakture")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("IznosBezPdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IznosSaPdv")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IznosSaPdvBiH")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("IznosSaPdvHr")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<int>("PdvId")
                        .HasColumnType("int");

                    b.Property<bool>("Zakljucen")
                        .HasColumnType("bit");

                    b.HasKey("FakturaId");

                    b.HasIndex("KupacId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("PdvId");

                    b.ToTable("Faktura");
                });

            modelBuilder.Entity("Fakture.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<Guid>("AutorizacijskiToken")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("BrojTelefona")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DatumRodjenja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordSalt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prezime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UlogaID")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("KorisnikID");

                    b.HasIndex("UlogaID");

                    b.ToTable("Korisnici");

                    b.HasData(
                        new
                        {
                            KorisnikID = 1,
                            AutorizacijskiToken = new Guid("ffb804f9-ff15-494f-a583-bb736327a9e8"),
                            BrojTelefona = "061111111",
                            DatumRodjenja = new DateTime(1998, 12, 23, 11, 19, 59, 588, DateTimeKind.Local).AddTicks(5513),
                            Email = "demo.demo@hotmail.com",
                            Ime = "admin",
                            PasswordHash = "admin",
                            Prezime = "admin",
                            UlogaID = 1,
                            UserName = "admin"
                        });
                });

            modelBuilder.Entity("Fakture.Models.Kupac", b =>
                {
                    b.Property<int>("KupacID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumRegistracije")
                        .HasColumnType("datetime2");

                    b.Property<int>("KorisnikID")
                        .HasColumnType("int");

                    b.HasKey("KupacID");

                    b.HasIndex("KorisnikID");

                    b.ToTable("Kupac");
                });

            modelBuilder.Entity("Fakture.Models.Narudzba", b =>
                {
                    b.Property<int>("NarudzbaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktivna")
                        .HasColumnType("bit");

                    b.Property<string>("BrojNarudzbe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Datum")
                        .HasColumnType("datetime2");

                    b.Property<int>("KupacId")
                        .HasColumnType("int");

                    b.HasKey("NarudzbaId");

                    b.HasIndex("KupacId");

                    b.ToTable("Narudzba");
                });

            modelBuilder.Entity("Fakture.Models.NarudzbaProizvod", b =>
                {
                    b.Property<int>("NarudzbaProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Kolicina")
                        .HasColumnType("int");

                    b.Property<int>("NarudzbaId")
                        .HasColumnType("int");

                    b.Property<int>("ProizvodId")
                        .HasColumnType("int");

                    b.HasKey("NarudzbaProizvodId");

                    b.HasIndex("NarudzbaId");

                    b.HasIndex("ProizvodId");

                    b.ToTable("NarudzbaProizvod");
                });

            modelBuilder.Entity("Fakture.Models.Pdv", b =>
                {
                    b.Property<int>("PdvId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Drzava")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Vrijednost")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("PdvId");

                    b.ToTable("Pdv");
                });

            modelBuilder.Entity("Fakture.Models.Proizvod", b =>
                {
                    b.Property<int>("ProizvodId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cijena")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Sifra")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slika")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProizvodId");

                    b.ToTable("Proizvod");

                    b.HasData(
                        new
                        {
                            ProizvodId = 1,
                            Cijena = 2m,
                            Naziv = "coca cola",
                            Sifra = "6414966c-b225-4ba7-b9c8-c72c1555ee06"
                        },
                        new
                        {
                            ProizvodId = 2,
                            Cijena = 2m,
                            Naziv = "fanta",
                            Sifra = "c88a343b-39d7-4575-8c96-3befdb0688be"
                        },
                        new
                        {
                            ProizvodId = 3,
                            Cijena = 3m,
                            Naziv = "cokolada",
                            Sifra = "efc1fd1c-ecf3-410b-aea5-b7b73a6ce649"
                        });
                });

            modelBuilder.Entity("Fakture.Models.Uloga", b =>
                {
                    b.Property<int>("UlogaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UlogaID");

                    b.ToTable("Uloga");

                    b.HasData(
                        new
                        {
                            UlogaID = 1,
                            Naziv = "administrator"
                        },
                        new
                        {
                            UlogaID = 2,
                            Naziv = "kupac"
                        });
                });

            modelBuilder.Entity("Fakture.Models.Faktura", b =>
                {
                    b.HasOne("Fakture.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fakture.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fakture.Models.Pdv", "Pdv")
                        .WithMany()
                        .HasForeignKey("PdvId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fakture.Models.Korisnik", b =>
                {
                    b.HasOne("Fakture.Models.Uloga", "Uloga")
                        .WithMany()
                        .HasForeignKey("UlogaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fakture.Models.Kupac", b =>
                {
                    b.HasOne("Fakture.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fakture.Models.Narudzba", b =>
                {
                    b.HasOne("Fakture.Models.Kupac", "Kupac")
                        .WithMany()
                        .HasForeignKey("KupacId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Fakture.Models.NarudzbaProizvod", b =>
                {
                    b.HasOne("Fakture.Models.Narudzba", "Narudzba")
                        .WithMany()
                        .HasForeignKey("NarudzbaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Fakture.Models.Proizvod", "Proizvod")
                        .WithMany()
                        .HasForeignKey("ProizvodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
